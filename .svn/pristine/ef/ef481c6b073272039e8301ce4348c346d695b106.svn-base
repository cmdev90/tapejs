<!DOCTYPE html>
<html>
<head>
    <script src='jquery/jquery.js' type="text/javascript"></script>
    <script src='jquery/jquery-ui.custom.js' type="text/javascript"></script>
    <script src='jquery/jquery.cookie.js' type="text/javascript"></script>

    <link rel='stylesheet' type='text/css' href='skin/ui.dynatree.css'>
    <script src='jquery.dynatree.js' type="text/javascript"></script>
	<title>Dynatree - Example Browser</title>

</head>

	<body>
		<p>
			<a href="#" id="btnExpandAll">Expand all</a> -
			<a href="#" id="btnCollapseAll">Collapse all</a> 
		</p>
		<!-- Add a <div> element where the tree should appear: -->
    	<div id="tree" style="width:400px;"> </div>

    	<div id="main"></div>
	</body>

 <script type="text/javascript">
 	var id = 2;
 	$.ajax({
 		url : '/objective/'+id,
 		type : 'get',
 		success : function (response) {
 			var arr = [];

 			$.each(response, function (index, value){
 				arr.push({
 					title : "Impact " + (index + 1) + " - " + value.name,
 					key : value.id,
 					gets : "outcome",
 					isLazy: true,
 				});
 			});

 			initTree(arr);
 		},
 		error : function (err) {
 			console.log(err);
 		}
 	});

    var initTree = function(children){
    	children.push({
    		title : "Add Impact",
    		key : "add"
    	})
		var addNode = function (node, child) {
			node.addChild(child);
			// Remove the 'loading...' status:
			node.setLazyNodeStatus(DTNodeStatus_Ok);
		}

        // Attach the dynatree widget to an existing <div id="tree"> element
        // and pass the tree options as an argument to the dynatree() function:
        $("#tree").dynatree({
            onActivate: function(node) {
            	if (node.data.key === "add") {

            	}else {
	                // A DynaTreeNode object is passed to the activation handler
	                // Note: we also get this event, if persistence is on, and the page is reloaded.
	                $.ajax({
	                	type : 'get',
	                	url : '/object/'+node.data.key,
	                	success : function (response) {
	                		var str = JSON.stringify(response);
	                		$("#main").html(str);
	                	},
	                	error : function (err) {
	                		console.log(err);
	                	}
	                });
	            }
            },

			onLazyRead: function(node){
				$.ajax({
					url : '/'+node.data.gets+'/'+node.data.key,
					type : 'get',
					success : function (response) {
			 			var arr = [], t, lazy;
			 			if (node.data.gets === "outcome"){
			 				t = "Outcome";
			 				lazy = true;
			 			} else {
			 				t = "Output";
			 			}
			 			$.each(response, function (index, value){	
			 				arr.push({
			 					title : t + " " + (index + 1) + " - " + value.name,
			 					key : value.id,
			 					gets : "output",
			 					isLazy: lazy,
			 				});
			 			});
						addNode(node, arr);
					},
			 		error : function (err) {
			 			console.log(err);
			 		}
				});
			},

            children: children,
        });

		$("#btnExpandAll").click(function(){
			$("#tree").dynatree("getRoot").visit(function(node){
				node.expand(true);
			});
			return false;
		});
		$("#btnCollapseAll").click(function(){
			$("#tree").dynatree("getRoot").visit(function(node){
				node.expand(false);
			});
			return false;
		});

    };
    </script>
</html>
